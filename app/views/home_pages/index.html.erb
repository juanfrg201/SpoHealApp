<div class="container">
  <div class="hero-body">
    <div class="container">
      <!-- Card con tabla -->
      <div class="card">
        <header class="card-header">
          <p class="card-header-title">
            Días Activos
          </p>
        </header>
        <div class="card-content">
          <div class="content mt-0">
            <!-- Tabla con estilos responsivos -->
            <%= render 'table_info' %>
          </div>
        </div>
      </div>

      <!-- Agregamos una separación entre las tarjetas -->
      <div class="mt-4"></div>

      <!-- Card con recomendaciones -->
      <div class="content has-text-centered">
        <p class=" has-text-success">Recomendaciones</p>
      </div>
      <div class="card has-shadow-8">
        <div class="card-content">
          <div class="columns">
            <div class="column">
              <div class="content">
                
              </div>
            </div>
            <div class="column">
              <div class="content">
                <p>Contenido de la segunda columna...</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const vapidPublicKey = new Uint8Array(<%= Base64.urlsafe_decode64("BDea7ebh7izOOWNuZWdNyL5dZoodZo_OeIULi4rxs4wku8sqvhXYqUs027vJE9hjF-iwSIRbYuINW4btM-XZgoc=").bytes %>)
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/service-worker.js')
      .then(function(registration) {
        navigator.serviceWorker.ready.then((serviceWorkerRegistration) => {
          serviceWorkerRegistration.pushManager
          .subscribe({
            userVisibleOnly: true,
            applicationServerKey: vapidPublicKey
          }).then(async function(sub) {
            try {
              const response = await fetch('/notifications', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(sub),
              });

              if (!response.ok) {
                throw new Error('Error en la solicitud al servidor');
              }

              const data = await response.json();
              console.log(data);
            } catch (error) {
              console.error('Error en la solicitud al servidor:', error);
            }
          });

        });
      })
      .catch(function(error) {
        console.error('Error al registrar el Service Worker:', error);
      });
  }
</script>
